{"ast":null,"code":"var _jsxFileName = \"/Users/meme/Desktop/DnD/DnD/dnd_front/src/auth/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  //All'avvio prova a leggere la sessione dal cookie\n  useEffect(() => {\n    fetch(\"/api/me\", {\n      credentials: \"include\"\n    }).then(r => r.ok ? r.json() : Promise.reject(\"\")).then(d => setUser(d.user)).catch(() => setUser(null)).finally(() => setLoading(false));\n  }, []);\n\n  //LOGIN FUNCTION\n  async function login(email, password) {\n    const r = await fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (!r.ok) throw new Error(\"Bad credentials\");\n    const me = await fetch(\"/api/me\", {\n      credentials: \"include\"\n    }).then(x => x.json());\n    setUser(me.user);\n  }\n\n  //LOGOUT FUNCTION\n  async function logout() {\n    await fetch(\"/api/logout\", {\n      method: \"POST\",\n      credentials: \"include\"\n    });\n    setUser(null);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout\n    },\n    children: [\" \", children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n}\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","fetch","credentials","then","r","ok","json","Promise","reject","d","catch","finally","login","email","password","method","headers","body","JSON","stringify","Error","me","x","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/meme/Desktop/DnD/DnD/dnd_front/src/auth/AuthContext.js"],"sourcesContent":["import React, {createContext, useContext, useEffect, useState} from \"react\";    \n\nconst AuthContext = createContext(null);\nexport const useAuth = () => useContext(AuthContext);\n\nexport function AuthProvider({children}) {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    //All'avvio prova a leggere la sessione dal cookie\n    useEffect(() => {\n        fetch(\"/api/me\", {credentials: \"include\"})\n        .then(r => r.ok ? r.json() : Promise.reject(\"\"))\n        .then(d => setUser(d.user))\n        .catch(() => setUser(null))\n        .finally(() => setLoading(false));\n    }, []);\n\n    //LOGIN FUNCTION\n    async function login(email, password) {\n        const r = await fetch ('/api/login', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({email, password})\n        });\n        if(!r.ok) throw new Error(\"Bad credentials\");\n        const me = await fetch(\"/api/me\", {credentials: \"include\"}).then(x => x.json());\n        setUser(me.user);\n    }\n\n    //LOGOUT FUNCTION\n    async function logout() {\n        await fetch(\"/api/logout\", {method: \"POST\", credentials: \"include\"});\n        setUser(null);\n    }\n     \n    return <AuthContext.Provider value={{user, loading, login, logout}}> {children} </AuthContext.Provider>;\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AACvC,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,SAASE,YAAYA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAAAC,GAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAD,SAAS,CAAC,MAAM;IACZc,KAAK,CAAC,SAAS,EAAE;MAACC,WAAW,EAAE;IAAS,CAAC,CAAC,CACzCC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,GAAGD,CAAC,CAACE,IAAI,CAAC,CAAC,GAAGC,OAAO,CAACC,MAAM,CAAC,EAAE,CAAC,CAAC,CAC/CL,IAAI,CAACM,CAAC,IAAIX,OAAO,CAACW,CAAC,CAACZ,IAAI,CAAC,CAAC,CAC1Ba,KAAK,CAAC,MAAMZ,OAAO,CAAC,IAAI,CAAC,CAAC,CAC1Ba,OAAO,CAAC,MAAMX,UAAU,CAAC,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,eAAeY,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IAClC,MAAMV,CAAC,GAAG,MAAMH,KAAK,CAAE,YAAY,EAAE;MACjCc,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7Cd,WAAW,EAAE,SAAS;MACtBe,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACN,KAAK;QAAEC;MAAQ,CAAC;IAC1C,CAAC,CAAC;IACF,IAAG,CAACV,CAAC,CAACC,EAAE,EAAE,MAAM,IAAIe,KAAK,CAAC,iBAAiB,CAAC;IAC5C,MAAMC,EAAE,GAAG,MAAMpB,KAAK,CAAC,SAAS,EAAE;MAACC,WAAW,EAAE;IAAS,CAAC,CAAC,CAACC,IAAI,CAACmB,CAAC,IAAIA,CAAC,CAAChB,IAAI,CAAC,CAAC,CAAC;IAC/ER,OAAO,CAACuB,EAAE,CAACxB,IAAI,CAAC;EACpB;;EAEA;EACA,eAAe0B,MAAMA,CAAA,EAAG;IACpB,MAAMtB,KAAK,CAAC,aAAa,EAAE;MAACc,MAAM,EAAE,MAAM;MAAEb,WAAW,EAAE;IAAS,CAAC,CAAC;IACpEJ,OAAO,CAAC,IAAI,CAAC;EACjB;EAEA,oBAAOR,OAAA,CAACC,WAAW,CAACiC,QAAQ;IAACC,KAAK,EAAE;MAAC5B,IAAI;MAAEE,OAAO;MAAEa,KAAK;MAAEW;IAAM,CAAE;IAAA5B,QAAA,GAAC,GAAC,EAACA,QAAQ,EAAC,GAAC;EAAA;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAsB,CAAC;AAC3G;AAACjC,GAAA,CAjCeF,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}